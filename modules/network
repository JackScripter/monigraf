#!/usr/bin/env python3
import re
import time
import sys
import configparser
import ast
import socket
import subprocess
import psutil
import netifaces
from ES import ES

config = configparser.ConfigParser()
config.read('/etc/monigraf/monigraf.ini')
host = socket.gethostname()

def GetDevices():
    if config['network']['interfaces'] == "all":
        listNet = netifaces.interfaces()            # Get network interfaces
        listNet.remove('lo')                        # Remove loopback interface. Don't want statistic from this one.
    else:
        listNet = config['network']['interfaces']
    return listNet

def Check(net):
    txpath = "/sys/class/net/" + net + "/statistics/tx_bytes"
    rxpath = "/sys/class/net/" + net + "/statistics/rx_bytes"
    #macaddr = netifaces.ifaddresses(net)[netifaces.AF_LINK][0]['addr']
    rx_read = open(rxpath, 'r'); tx_read = open(txpath, 'r')
    rx_bytes_last = rx_read.read(); tx_bytes_last = tx_read.read()
    rx_read.close(); tx_read.close()
    # Have to close everytime because the second value will be null.
    time.sleep(1)
    rx_read = open(rxpath, 'r'); tx_read = open(txpath, 'r')
    rx_bytes_now = rx_read.read(); tx_bytes_now = tx_read.read()
    rx_read.close(); tx_read.close()
    pre_data = {}       # Create empty dict to store data.
    pre_data['rx_bytes'] = float(rx_bytes_now) - float(rx_bytes_last)  # Calculate average bytes per seconds.
    pre_data['tx_bytes'] = float(tx_bytes_now) - float(tx_bytes_last)     # Calculate average bytes per seconds.
    pre_data['port'] = net
    dbinfo.add_listdata("interfaces", pre_data)

def Refresh():
    for net in ast.literal_eval(str(listNet)):
        pre_data = {}
        dev = subprocess.run(['/usr/bin/lspci'], stdout=subprocess.PIPE).stdout.decode('utf-8')
        for line in dev.splitlines():
            if re.search('Ethernet', line):
                idKern = line.split(' ')[0]
                devInfos = subprocess.run(['/usr/bin/lspci', '-v', '-s', idKern], stdout=subprocess.PIPE).stdout.decode('utf-8')
                for info in devInfos.splitlines():
                    if re.search('Subsystem:', info): pre_data['controller'] = info.split(': ')[1]
                    elif re.search('driver', info): pre_data['driver'] = info.split(': ')[1]
        pre_data['mac'] = netifaces.ifaddresses(net)[netifaces.AF_LINK][0]['addr']  # Retrieve MAC address
        pre_data['speed'] = psutil.net_if_stats()[net][2]   # Interface Speed
        pre_data['duplex'] = str(psutil.net_if_stats()[net][1]).split('_')[2]   # Duplex mode
        pre_data['mtu'] = psutil.net_if_stats()[net][3] # MTU
        pre_data['port'] = net
        dbinfo.add_listdata("network", pre_data)

listNet = GetDevices()
if sys.argv[1] == "refresh":
    dbinfo = ES.ES("monigraf-inventory")
    dbinfo.create_list("network")
    Refresh()
    dbinfo.add_data("host", host)
    dbinfo.send()
    exit()

while True:
    dbinfo = ES.ES("monigraf-network-local")
    dbinfo.create_list("interfaces")
    for net in ast.literal_eval(str(listNet)):
        Check(net)
    dbinfo.add_data("host", host)
    dbinfo.send()
    time.sleep(config.getint('network','delay'))
