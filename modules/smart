#!/usr/bin/env python3
import time
import sys
import configparser
import socket
from pySMART import DeviceList
from BodyBuilder import BodyBuilder

config = configparser.ConfigParser()
config.read('/etc/monigraf/monigraf.ini')
host = socket.gethostname()

def Check():
    for i in range(len(listDrives)):
        sn = listDrives[i].serial
        # Try to get attributes from drives.
        # TBW
        try:
            tbw = int(listDrives[i].attributes[241].raw)
            if tbw < 3000000: tbw = tbw * 1000000000 / 512
        except AttributeError: tbw = -1
        # Temperature
        try: temp = listDrives[i].attributes[194].raw
        except AttributeError: temp = listDrives[i].attributes[190].raw
        poweron = listDrives[i].attributes[9].raw
        # Health
        try:
            health = str(listDrives[i].attributes[177])
            health = ' '.join(health.split()).split(' ')[2]
        except: health = int(-1)
        dbinfo.add_tag("serial_number", sn)
        dbinfo.add_field("tbw", float(tbw))
        dbinfo.add_field("temperature", int(temp))
        dbinfo.add_field("power_on_hours", float(poweron))
        dbinfo.add_field("health", int(health))
        dbinfo.Add()

def Refresh():
    dbinfo.Delete()
    for i in range(len(listDrives)):
        # Get drive informations
        sn = listDrives[i].serial
        dev = listDrives[i].name
        devModel = listDrives[i].model
        devType = listDrives[i].is_ssd
        if devType: devType = "SSD"
        else: devType = "Hard Drive"
        capacity = listDrives[i].capacity
        firmware = listDrives[i].firmware

        dbinfo.add_field("model", devModel)
        dbinfo.add_field("drive", dev)
        dbinfo.add_field("serial_number", sn)
        dbinfo.add_field("capacity", capacity)
        dbinfo.add_field("type", devType)
        dbinfo.add_field("firmware", firmware)
        dbinfo.Add()

if sys.argv[1] == "refresh":
    listDrives = DeviceList().devices
    dbinfo = BodyBuilder.BuildBody("smart_info", host)
    Refresh()
    exit()

dbinfo = BodyBuilder.BuildBody("smart", host)
while True:
    listDrives = DeviceList().devices
    Check()
    time.sleep(config.getint('smart','delay'))
